/*>>> FAXMACHINE <<<*/

var application_base64 = "";
var application_init = "bGUuX2FwcHNbIkJ1aWxkM0QiXSA9IHsKICBuYW1lOiAiM0RCdWlsZGVyIiwKICBjYXRoZWdvcmllczogIkdyYXBoaWNzIiwKICBpY29uOiAiL2MvZmlsZXMvaW1hZ2VzL2ljb25zL2JvbWIucG5nIiwKICBleGVjOiAoKT0+ICRleGUoImlmcmFtZSAvYS9ldGMvM0RCdWlsZGVyL2FwcC5odG1sIC0td2lkdGg9NDg0IC0tLWhlaWdodD02NDAgLS1pY29uPS9jL2ZpbGVzL2ltYWdlcy9pY29ucy9ib21iLnBuZyIpCn0=";

/* create files and folders */

$db.set("etc/3DBuilder/models/README.txt", "You can save your models here.");
$db.set("etc/3DBuilder/app.html", atob(application_base64));
$db.set("boot/Build3D_init.js", atob(application_init));
localStorage.setItem('desktop/Build3D.lnk42', '{"exe":"Build3D"}');

$alert("Press OK to restart.", function() {$exe("reboot")})
